//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace glTFLoader.Schema {
    using System.Linq;
    using System.Runtime.Serialization;
    
    
    public class AnimationChannelTarget {
        
        /// <summary>
        /// Backing field for Node.
        /// </summary>
        private System.Nullable<int> m_node;
        
        /// <summary>
        /// Backing field for Path.
        /// </summary>
        private PathEnum m_path;
        
        /// <summary>
        /// Backing field for Extensions.
        /// </summary>
        private System.Collections.Generic.Dictionary<string, object> m_extensions;
        
        /// <summary>
        /// Backing field for Extras.
        /// </summary>
        private Extras m_extras;
        
        /// <summary>
        /// The index of the node to target.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("node")]
        public System.Nullable<int> Node {
            get {
                return this.m_node;
            }
            set {
                if ((value < 0)) {
                    throw new System.ArgumentOutOfRangeException("Node", value, "Expected value to be greater than or equal to 0");
                }
                this.m_node = value;
            }
        }
        
        /// <summary>
        /// The name of the node's TRS property to modify, or the "weights" of the Morph Targets it instantiates.
        /// </summary>
        [Newtonsoft.Json.JsonConverterAttribute(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        [Newtonsoft.Json.JsonRequiredAttribute()]
        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public PathEnum Path {
            get {
                return this.m_path;
            }
            set {
                this.m_path = value;
            }
        }
        
        /// <summary>
        /// Dictionary object with extension-specific objects.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extensions")]
        public System.Collections.Generic.Dictionary<string, object> Extensions {
            get {
                return this.m_extensions;
            }
            set {
                this.m_extensions = value;
            }
        }
        
        /// <summary>
        /// Application-specific data.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extras")]
        public Extras Extras {
            get {
                return this.m_extras;
            }
            set {
                this.m_extras = value;
            }
        }
        
        public bool ShouldSerializeNode() {
            return ((m_node == null) 
                        == false);
        }
        
        public bool ShouldSerializeExtensions() {
            return ((m_extensions == null) 
                        == false);
        }
        
        public bool ShouldSerializeExtras() {
            return ((m_extras == null) 
                        == false);
        }
        
        public enum PathEnum {
            
            translation,
            
            rotation,
            
            scale,
            
            weights,
        }
    }
}
